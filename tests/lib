err(){
	echo "$@" > /dev/stderr
}

no(){
	"$@" > /dev/null 2> /dev/null
	return $?
}

_assert_function(){
	_assert declare -f -F "$1"
}

_assert_variable(){
	VAR="$1"
	# check if the variable exists usually this is done by checking:
	#  [ -z "${var+1}" ]
	# which gives the string 1, if var is set. we use this eval
	# monstrosity because we don't know which variable we want to check.
	STR="$( eval echo \${$VAR+1} )"
	_assert [ ! -z "$STR" ]
}

# assertion for things that have stdout output
_assert_output(){
	if [ $# -ne 0 ]; then
		"$@" 2> /dev/null
		if [ $? -ne 0 ]; then
			echo "Error assertion failed: $@"
			err "Error assertion failed: $@"
		fi
	fi
}

_assert(){
	if [ $# -ne 0 ]; then
		"$@" > /dev/null 2> /dev/null
		if [ $? -ne 0 ]; then
			echo "Error assertion failed: $@"
			err "Error assertion failed: $@"
		else
			echo "$@"
		fi
	fi
}
